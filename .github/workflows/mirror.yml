on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  mirror:
    runs-on: ubuntu-latest
    env:
      SRC: "https://github.com/js2xxx/umi.git"
      DST: "https://PLNTRY:${{ secrets.PASSWORD }}@gitlab.eduxiji.net/PLNTRY/OSKernel2023-umi.git"
    steps:
      - name: Clone the source
        run: git clone --mirror "$SRC"

      - name: Set remote
        run: cd `basename "$SRC"` && git remote set-url --push origin "$DST"

      - name: Fetch remote
        run: cd `basename "$SRC"` && git fetch -p origin

      - name: Update branches
        run: cd `basename "$SRC"` && git for-each-ref --format 'delete %(refname)' refs/pull | git update-ref --stdin

      - name: Push to the destination
        run: cd `basename "$SRC"` && git push --mirror

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchains
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy

      - name: Check clippy
        run: cargo clippy --target riscv64imac-unknown-none-elf

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchains
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Check format
        run: cargo fmt --all --check

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchains
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools

      - name: Install other dependencies
        run: |
          sudo apt install make
          cargo install cargo-binutils

      - name: Build
        run: make build

      - name: Build release
        run: make build MODE=release

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchains
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools

      - name: Install other dependencies
        run: |
          sudo apt install make
          cargo install cargo-binutils

      - name: Test
        run: make test
